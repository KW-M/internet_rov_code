{"mappings":"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","sources":["src/js/gamepad.js"],"sourcesContent":["var DEFAULT_GAMEPAD_HELP_MSG = \"Press any button on your controller or onscreen.\"\nconst DEFUALT_BUTTON_ORDER = [\n    \"A\",\n    \"B\",\n    \"X\",\n    \"Y\",\n    \"L1\",\n    \"R1\",\n    \"L2\",\n    \"R2\",\n    \"select\",\n    \"start\",\n    \"stick_button_left\",\n    \"stick_button_right\",\n    \"dpadUp\",\n    \"dpadDown\",\n    \"dpadLeft\",\n    \"dpadRight\"\n]\n\n\n// Gamepad help section\n\nvar gamepadHelpVisible = false;\nvar gamepadHelpText = document.getElementById(\"gamepad-help-text\")\nfunction setupGamepadHelp() {\n    var gamepadContainer = document.getElementById(\"gamepad-container\")\n    var gamepadHelpToggleButton = document.getElementById(\"gamepad-help-button\")\n    gamepadHelpToggleButton.onclick = () => {\n        if (gamepadHelpVisible == false) {\n            gamepadContainer.classList.add(\"help-open\")\n            gamepadHelpToggleButton.innerText = \"Close Help\"\n            gamepadHelpText.innerText = 'Press or click any button to see help'\n        } else {\n            gamepadContainer.classList.remove(\"help-open\")\n            gamepadHelpToggleButton.innerText = \"Gamepad Help\"\n        }\n        gamepadHelpVisible = !gamepadHelpVisible // toggle it\n    }\n}\n\nfunction initGamepadSupport(gamepadUi, gamepadEmulator, gamepadUpdatedCallback) {\n\n    // As of 2012, it seems impossible to detect Gamepad API support\n    // in Firefox, hence we need to hardcode it in gamepadSupportAvailable.\n    navigator.getGamepads = navigator.getGamepads || navigator.webkitGamepads || navigator.webkitGetGamepads\n    var gamepadSupportAvailable = !!navigator.getGamepads || (navigator.userAgent.indexOf('Firefox/') != -1);\n    if (!gamepadSupportAvailable) {\n        // It doesn't seem Gamepad API is available ' show a message telling\n        // the visitor about it.\n        gamepadUi.showNotSupported();\n        return false;\n    }\n\n    const buttonHighlightElements = gamepadUi.getButtonHighlightElements();\n    gamepadEmulator.monkeyPatchGetGamepads()\n    // gamepadEmulator.addEmulatedGamepad(0, gamepadEmulator.DEFAULT_BUTTON_COUNT, gamepadEmulator.DEFAULT_AXIS_COUNT)\n    gamepadEmulator.registerOnScreenGamepadButtonEvents(0, buttonHighlightElements);\n    gamepadEmulator.registerOnScreenGamepadAxisEvents(0, [{\n        xAxisGpadAxis: 0,\n        yAxisGpadAxis: 1,\n        elem: document.getElementById(\"gamepad-joystick-touch-area-left\"),\n    }, {\n        xAxisGpadAxis: 2,\n        yAxisGpadAxis: 3,\n        elem: document.getElementById(\"gamepad-joystick-touch-area-right\"),\n    }]);\n\n    setupGamepadHelp();\n\n    // otherwise gamepad support is available. so initilize the joymap library\n    var lastGamepadCount = 0;\n    var lastGamepadId = \"\";\n    var joyMod = joymap.createQueryModule({ threshold: 0.2, clampThreshold: true });;\n    const gpadMap = joymap.createJoymap({\n        autoConnect: true, // autoconnect gets confused by the gamepad emulation, as it causes the gamepad id to change, so we connect manually\n        // do stuff immediately after each Gamepad Poll (should/will be called about 60 times per second)\n        onPoll: function gamepadUpdate() {\n\n            // check if a gamepad was just connected or disconnected:\n            const gamepads = gpadMap.getGamepads()\n            const gamepadCount = gamepads.length;\n            if (gamepadCount != lastGamepadCount || (gamepads[0] && gamepads[0].id != lastGamepadId)) {\n                if (gamepadCount == 0) {\n                    gamepadUi.showNoGamepads();\n                    lastGamepadCount = 0;\n                    lastGamepadId = \"\";\n                    return;\n                } else if (gamepadCount >= 1) {\n                    if (joyMod) gpadMap.removeModule(joyMod);\n                    console.log(joyMod)\n                    joyMod = joymap.createQueryModule({ threshold: 0.2, clampThreshold: true });\n                    gpadMap.addModule(joyMod);\n                    console.log(joyMod)\n\n                    gamepadUi.showGamepadsConnected(gamepads);\n                    console.log(joyMod.getAllButtons(), joyMod.getAllSticks(), joyMod.getAllMappers())\n                }\n                lastGamepadCount = gamepadCount;\n                lastGamepadId = gamepads[0].id;\n            }\n\n            // console.log(\"g:\", gpadMap.getGamepads())\n            var buttonStates = joyMod.getAllButtons();\n            if (buttonStates[\"A\"]) {\n                buttonStates = DEFUALT_BUTTON_ORDER.map((key) => buttonStates[key])\n                gamepadUi.handleGamepadVisualFeedbackButtonEvents(buttonStates, buttonHighlightElements, \"touched\", \"pressed\");\n            }\n\n            var axisStates = joyMod.getAllSticks();\n            if (axisStates[\"L\"] && axisStates[\"R\"]) {\n                axisStates = [\n                    {\n                        thumbStickElement: document.getElementById(\"stick_left\"),\n                        axisRange: 14,\n                        xValue: axisStates.L.value[0],\n                        yValue: axisStates.L.value[1],\n                    },\n                    {\n                        thumbStickElement: document.getElementById(\"stick_right\"),\n                        axisRange: 14,\n                        xValue: axisStates.R.value[0],\n                        yValue: axisStates.R.value[1],\n                    }\n                ]\n\n                gamepadUi.handleGamepadVisualFeedbackAxisEvents(axisStates, \"axis-hovered\", \"axis-moved\");\n            }\n\n            gamepadUpdatedCallback(joyMod.getAllButtons(), joyMod.getAllSticks(), joyMod.getAllMappers())\n        }\n    });\n    gpadMap.addModule(joyMod);\n    gpadMap.start();\n}"],"names":[],"version":3,"file":"index.b42a606b.js.map","sourceRoot":"/__parcel_source_root/"}