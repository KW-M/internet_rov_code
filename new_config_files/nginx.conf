##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

user pi;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;
    index    index.html

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;

	gzip_vary on;
	gzip_proxied any;
	gzip_comp_level 6;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;
	gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	# include /etc/nginx/conf.d/*.conf;
	# include /etc/nginx/sites-enabled/*;

    # helper to make the websocket proxy work: from: https://www.nginx.com/blog/websocket-nginx/
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

	# setup for: https://learn.netdata.cloud/docs/agent/running-behind-nginx
	upstream netdata {
		server 127.0.0.1:19999;
		keepalive 64;
	}

	upstream ngrok_dashboard {
		server 127.0.0.1:4040;
		keepalive 64;
	}

    # from https://stackoverflow.com/a/54679176
    server {
        listen 80 default_server;
		# uncomment the line if you want nginx to listen on IPv6 address
        listen [::]:80 default_server;

        error_page    404    /404.html;

		server_name _;

        # proxy_connect_timeout 1s;
        # proxy_timeout 3s;

		location / {
			root /home/pi/internet_rov_code/website_static_files;
			# root /var/www/html;
			index index.html;

			# First attempt to serve request as file, then
			# as directory, then fall back to displaying a 404.
			try_files $uri $uri/ =404;
			# show a simple "index" webpage with filenames if the end user's browser requests a directory rather than a file: https://stackoverflow.com/questions/10663248/how-to-configure-nginx-to-enable-kinda-file-browser-mode
			autoindex on;
      	}

		location /log/ {
			sendfile on;
			sendfile_max_chunk 1m;
			alias  /var/log/;
			autoindex on;
			try_files $uri $uri/ =404;

			types {
                text/plain log;
        	}
        }

        # websocket proxy to the uv4l streaming server on port 8080
		# from: https://www.nginx.com/blog/websocket-nginx/
        location = /stream/webrtc {
            proxy_pass http://127.0.0.1:8080/stream/webrtc;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
		}

		location /stream/ {
            proxy_pass http://localhost:8080/stream/;
        }

		location = /uv4l_dashboard {
			return 301 /uv4l_dashboard/;
		}

        location /uv4l_dashboard/ {
			sub_filter '</head>'  '<base href="/uv4l_dashboard/"></head>';
            proxy_pass http://127.0.0.1:8080/;
        }

		location = /ngrok_dashboard {
			return 301 /ngrok_dashboard/inspect/http/;
		}

        location /ngrok_dashboard/ {
            proxy_pass http://ngrok_dashboard/;
        }

		# from: https://learn.netdata.cloud/docs/agent/running-behind-nginx
		location = /netdata {
			return 301 /netdata/;
		}

		# from: https://learn.netdata.cloud/docs/agent/running-behind-nginx
		location ~ /netdata/(?<ndpath>.*) {
			proxy_redirect off;
			proxy_set_header Host $host;

			proxy_set_header X-Forwarded-Host $host;
			proxy_set_header X-Forwarded-Server $host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_http_version 1.1;
			proxy_pass_request_headers on;
			proxy_set_header Connection "keep-alive";
			proxy_store off;
			proxy_pass http://netdata/$ndpath$is_args$args;

			gzip on;
			gzip_proxied any;
			gzip_types *;
		}

    }
}